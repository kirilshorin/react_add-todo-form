{"version":3,"sources":["components/UserInfo/UserInfo.tsx","api/users.ts","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","id","username","TodoInfo","todo","usersFromServer","find","userId","findUser","cn","completed","title","TodoList","todos","map","getUser","visibleTodos","App","useState","searchQuery","setSearchQuery","selectedUser","setSelectedUser","validTitle","setValidTitle","validName","setValidName","setTodos","action","method","onSubmit","event","preventDefault","length","newTodo","Math","max","trim","htmlFor","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.45504aa4.chunk.js","sourcesContent":["import { FC } from 'react';\nimport { User } from '../../types/User';\n\ninterface Props {\n  user: User,\n}\n\nexport const UserInfo: FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { FC } from 'react';\nimport cn from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\nimport usersFromServer from '../../api/users';\nimport { User } from '../../types/User';\n\ninterface Props {\n  todo: Todo;\n}\n\nconst findUser = (todo: Todo) => {\n  return usersFromServer.find((user: User) => user.id === todo.userId) || null;\n};\n\nexport const TodoInfo: FC<Props> = ({ todo }) => {\n  const user = findUser(todo);\n\n  return (\n    <article\n      data-id={todo.id}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': todo.completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { FC } from 'react';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList: FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find((user: User) => (\n    user.id === userId\n  ));\n\n  return foundUser || null;\n}\n\nconst visibleTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedUser, setSelectedUser] = useState(0);\n  const [validTitle, setValidTitle] = useState(false);\n  const [validName, setValidName] = useState(false);\n  const [todos, setTodos] = useState(visibleTodos);\n\n  const handleQueryChange = ((event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(event.target.value);\n\n    setValidTitle(false);\n  });\n\n  const handleSelectChange = ((event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUser(+event.target.value);\n\n    setValidName(false);\n  });\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!searchQuery.length && selectedUser === 0) {\n      setValidTitle(true);\n      setValidName(true);\n\n      return;\n    }\n\n    if (selectedUser === 0) {\n      setValidName(true);\n\n      return;\n    }\n\n    if (!searchQuery.length) {\n      setValidTitle(true);\n\n      return;\n    }\n\n    const newTodo = {\n      id: Math.max(...todos.map(todo => todo.id)) + 1,\n      title: searchQuery,\n      completed: false,\n      userId: selectedUser,\n      user: getUser(selectedUser),\n    };\n\n    if (searchQuery.trim() && selectedUser) {\n      setTodos(\n        [...todos, newTodo],\n      );\n\n      setSearchQuery('');\n      setSelectedUser(0);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"titleInput\">Title: </label>\n          <input\n            id=\"titleInput\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={searchQuery}\n            onChange={handleQueryChange}\n          />\n          {validTitle && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelect\">User: </label>\n          <select\n            data-cy=\"userSelect\"\n            id=\"userSelect\"\n            value={selectedUser}\n            onChange={handleSelectChange}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n\n            {usersFromServer.map(user => (\n              <option value={user.id} key={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {validName && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}